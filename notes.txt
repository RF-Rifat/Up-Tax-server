// village DB

1. pagination query for villages data (get)
2. post a village
3. update a village by id
4. delete a village by id
5. get village by id

// houseHolders and Business DB
1. post a house data
2. post a business data
3. pagination query for house and business data (get)
4. get single house and business by id
5. delete single house an business by id

// Users DB

1. post a user 


//  aggregation  notes
/* 
  if (err) {
    console.error('Error connecting to the database:', err);
    return;
  }

  const db = client.db(dbName);
  const collection = db.collection(collectionName);

  // Define the aggregation pipeline
  const pipeline = [
    {
      $match: {
        head_of_household_mobile: phoneNumber,
      },
    },
    {
      $lookup: {
        from: 'tax',
        localField: 'head_of_household_mobile',
        foreignField: 'phone',
        as: 'amount',
      },
    },
    {
      $replaceRoot: { newRoot: { $mergeObjects: [{ $arrayElemAt: ['$amount', 0] }, '$$ROOT'] } },
    },
    {
      $project: { amount: 0 },
    },
  ];

  // Execute the aggregation pipeline
  const result = await collection.aggregate(pipeline).toArray();

  // Log the result
  console.log(result)
 */

/* [
  {
    $match: {
      _id: ObjectId("6599644a1dbf53265331165f")
    }
  },
  {
    $lookup: {
      from: "tax",
      localField: "holding_number", 
      foreignField: "code",
      as: "taxInfo"
    }
  },
  {
    $replaceRoot: { newRoot: { $mergeObjects: [ { $arrayElemAt: [ "$taxInfo", 0 ] }, "$$ROOT" ] } }
  },
  {
    $project: { taxInfo: 0 } 
  }
] */
